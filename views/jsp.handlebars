<a href="signout">Sign Out</a>
</div>
</div>
<div class="col-container servlet">
  <div class="col-6">
  	<div class="picture">
  		<img class = "banner" src="static/images/jsp.jpg">
  	</div>
  </div>
</div>

<div class="body jsp">
  <div class="java-def jsp">
    <h3>What is Java Server Pages?</h3>
    <p>Java Server Pages (JSP) is a server-side programming technology that enables the creation of dynamic, platform-independent method for building Web-based applications. JSP have access to the entire family of Java APIs, including the JDBC API to access enterprise databases.</p>
    <p>JavaServer Pages (JSP) is a technology for developing Webpages that supports dynamic content. This helps developers insert java code in HTML pages by making use of special JSP tags.</p>
    <h3>Advantages of Java Server Pages</h3>
    <li>Dynamic part is written in Java, which makes it easier to use and it is portable to other operating systems and non-Microsoft Web servers.</li>
    <li>It is more convenient to write and to modify</li><br>
    <h3>JSP COMPONENTS</h3>
    <ul>
        <h5>Template text</h5>
        <p>Compiled into the appropriate output statement.</p>
        <h5>JSP Page directives</h5>
        <p>JSP Page directives is used to provide instructions in jsp page</p>
        <h5>JSP standard elements</h5>
        <p>Special JSP markup that are associated with some equivalent dynamic functionality. Example: [jsp:include] element provides functionality equivalent to the include() method of the Requestdispatcher object.</p>
        <h5>JSP custom elements</h5>
        <p>Special custom JSP markup whose dynamic functionalities are defined in a referenced ‘tag library’. Example: JSP standard tag library JSPL.</p>
        <li><b>Expression language expression</b></li>
        <p>Special expression (syntax: ${}) whose evaluated value is routed to the JSP’s output.</p>
        <li><b>JSP Scriplets</b></li>
        <p>Snippets of java code embedded in JSP.</p>
      </ul>
      </ul>
      <h4>JSP Architecture</h4>
      <p> THe web server needs an JSP engine. The JSP is responsible for incepting requests for JSP pages.
        A JSP container works with the web server to provide the runtime environment and other services needs.
    </ul>
  </div>
</div>

<button type="button" class="btn btn-info btn-lg" data-toggle="modal" data-target="#mymodal">open quiz</button>
<div class="modal fade" id="mymodal" role="dialog">
  <div class="modal-dialog">
    <div class="modal-content">
      <button type="button" class="close" data-dismiss="modal">&times;</button>
      <form method="POST" action="getAnswers">
        {{#each questionArr }}
          <p>{{showid}}. {{content}}</p>
          {{#each options }}
            <input type="radio" name={{../name}} value={{code}} />{{code}}. {{option}}<br>
          {{/each}}
          <br>
        {{/each }}
        <hr>
        <button>Send</button>
      </form>
      <button type="button" class="btn btn-default" data-dismiss="modal">close</button>
    </div>
  </div>
</div>
{{#if remaining}}
  <script>
    alert("you need to answer " + {{remaining}} + " questions");
  </script>
{{/if}}
